// Generated by .NET Reflector from D:\Sfered\Gazelle\Remnants\SferedApi_brep_manipulation.dll
namespace SferedApi
{
    using Rhino.Geometry;
    using Rhino.Geometry.Intersect;
    using System;
    using System.Collections.Generic;
    
    internal class EdgeSplitter
    {
        private const int INNER = -10;
        private const int OUTER = -20;
        public int edge;
        public int[] faces;
        private Brep brep;
        private SortedList<double, EdgeSplitter> cutters = new SortedList<double, EdgeSplitter>();
        
        public EdgeSplitter(Brep brep, int edge, bool newOne)
        {
            this.brep = brep;
            this.edge = edge;
            if (!newOne)
            {
                this.faces = this.Edge.AdjacentFaces();
            }
            else
            {
                this.faces = new int[] { -10, -20 };
            }
        }
        
        public void AddIntersect(EdgeSplitter other, IntersectionEvent x)
        {
            if (x.get_IsPoint())
            {
                this.cutters.Add(x.get_ParameterA(), other);
                other.cutters.Add(x.get_ParameterB(), this);
            }
        }
        
        public void Split()
        {
        }
        
        private BrepEdge Edge =>
            this.brep.get_Edges().get_Item(this.edge);
    }
}
