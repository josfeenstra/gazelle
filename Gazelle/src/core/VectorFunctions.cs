// Generated by .NET Reflector from D:\Sfered\Gazelle\Remnants\SferedApi_brep_manipulation.dll
namespace SferedApi
{
    using Rhino.Geometry;
    using System;
    using System.Runtime.CompilerServices;
    
    internal static class VectorFunctions
    {
        public static double DoubleEqualTolerance = 0.001;
        
        public static Vector3d Cross(this Vector3d self, Vector3d other) => 
            Vector3d.CrossProduct(self, other);
        
        public static double Dot(this Vector3d self, Vector3d other) => 
            ((self.X * other.X) + (self.Y * other.Y)) + (self.Z * other.Z);
        
        public static Vector3d FlipByDot(Vector3d toFlip, Vector3d guide)
        {
            if (toFlip.Dot(guide) < 0.0)
            {
                toFlip.Reverse();
            }
            return toFlip;
        }
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static bool IsSimilar(Point3d self, Point3d other) => 
            (IsSimilar(self.X, other.X) && IsSimilar(self.Y, other.Y)) && IsSimilar(self.Z, other.Z);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static bool IsSimilar(double self, double other) => 
            Math.Abs((double) (self - other)) < DoubleEqualTolerance;
    }
}
