// Generated by .NET Reflector from D:\Sfered\Gazelle\Remnants\SferedApi_brep_manipulation.dll
namespace SferedApi.Components.Node
{
    using Grasshopper.Kernel;
    using SferedApi;
    using SferedApi.Datatypes;
    using SferedApi.Properties;
    using System;
    using System.Drawing;
    using System.Linq;
    
    public class ComponentNodeMerge : GH_Component
    {
        public ComponentNodeMerge() : base(SD.Starter + "Node Merge", SD.Starter + "Merge", SD.CopyRight + "Merges two nodes into a single node.\nN2's k/v pairs will override N1's k/v pairs.", SD.PluginTitle, SD.PluginCategory1)
        {
        }
        
        protected override void RegisterInputParams(GH_Component.GH_InputParamManager pManager)
        {
            pManager.AddParameter(new GH_Param_DataNode(), "Data Node 1", "N1", "Data Node 1.", 0);
            pManager.AddParameter(new GH_Param_DataNode(), "Data Node 2", "N2", "Data Node 2.", 0);
            pManager.get_Param(1).set_Optional(true);
        }
        
        protected override void RegisterOutputParams(GH_Component.GH_OutputParamManager pManager)
        {
            pManager.AddParameter(new GH_Param_DataNode(), "Merged Nodes", "N", "Merged nodes", 0);
        }
        
        protected override void SolveInstance(IGH_DataAccess DA)
        {
            GH_DataNode dataNode = new GH_DataNode();
            DA.GetData<GH_DataNode>(0, ref dataNode);
            GH_DataNode node2 = new GH_DataNode();
            DA.GetData<GH_DataNode>(1, ref node2);
            dataNode = new GH_DataNode(dataNode);
            DataNode node3 = dataNode.get_Value();
            DataNode node4 = node2.get_Value();
            foreach (string str in node4.Dict.Keys.ToList<string>())
            {
                node3.Dict[str] = node4.Dict[str];
            }
            DA.SetData(0, dataNode);
        }
        
        protected override Bitmap Icon =>
            Resources.NodeAdd;
        
        public override Guid ComponentGuid =>
            new Guid("50e57c97-7008-49fc-a439-f6ac9cc7c23b");
    }
}
