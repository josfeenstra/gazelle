// Generated by .NET Reflector from D:\Sfered\Gazelle\Remnants\SferedApi_brep_manipulation.dll
namespace SferedApi
{
    using Grasshopper.Kernel;
    using Rhino.Geometry;
    using SferedApi.Properties;
    using System;
    using System.Drawing;
    
    public class DeconstructVertex : GH_Component
    {
        public DeconstructVertex() : base(SD.Starter + "Deconstruct vertex", "DeVertex", SD.CopyRight + "Deconstruct A BrepVertex of a Brep", SD.PluginTitle, SD.PluginCategory7)
        {
        }
        
        protected override void RegisterInputParams(GH_Component.GH_InputParamManager pManager)
        {
            pManager.AddBrepParameter("Brep", "B", "Brep", (GH_ParamAccess)0);
            pManager.AddIntegerParameter("VertexIndex", "Vi", "index of vertex", (GH_ParamAccess)0, 0);
        }
        
        protected override void RegisterOutputParams(GH_Component.GH_OutputParamManager pManager)
        {
            pManager.AddPointParameter("Point", "P", "3d location", (GH_ParamAccess)0);
            pManager.AddIntegerParameter("edge indices", "Ei", "the edges leading out from this point", (GH_ParamAccess)1);
        }
        
        protected override void SolveInstance(IGH_DataAccess DA)
        {
            Brep brep = null;
            int num = -1;
            DA.GetData<Brep>(0, ref brep);
            DA.GetData<int>(1, ref num);
            if (brep == null)
            {
                this.AddRuntimeMessage((GH_RuntimeMessageLevel)20, "Input bad");
            }
            else if ((num < 0) || (num >= brep.Vertices.Count))
            {
                this.AddRuntimeMessage((GH_RuntimeMessageLevel)10, "out of range");
            }
            else
            {
                BrepVertex vertex = brep.Vertices[num];
                DA.SetData(0, vertex.Location);
                DA.SetDataList(1, vertex.EdgeIndices());
            }
        }
        
        protected override Bitmap Icon =>
            Resources.Sfered_Iconified;
        
        public override Guid ComponentGuid =>
            new Guid("c7a09620-67f6-4e3c-90f4-3db1754834d6");
    }
}
